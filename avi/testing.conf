avi: {
	min_depth = 0;	#the minimum depth to maintain
};

gate: {
	time = 2000;	#the time(ms) to advance under the gate
	power = 100;	#the forward power to advance under the gate
	depth = 0;		#the initial depth of the submarine
};

buoy: {
	r_min_pixel_intensity = 60;		#The minimum "redness" value to be considered.
	g_min_pixel_intensity = 140;
	y_min_pixel_intensity = 140;

	min_total_intensity = 30000;	#The minimum total intensity of the frame to be considered important

	#Which 2 buoys to hit in what order
	#Buoy colors: Red = 0, green = 1, yellow = 2
	color_1 = 1;
	color_2 = 2;
	
	hit_time = 4000;	#The amount of time(ms) required to track the buoy before assumed hit
	back_speed = 40;	#The speed of retreat after hitting a buoy to acquire next buoy
	back_time = 6000;	#The time(ms) of retreat
};

vision: {
	video_stream_forward = "/dev/video0";	#The video device stream (/dev/videox) usually
	video_stream_down = "/dev/video1";
	no_tracking = 0;				#If vision is allowed to go into track mode and seize control of the submarine
	snapshot_enable = 1;			#Save frames periodically
	snapshot_time = 10;				#The number of frames between saved frames
	frame_trim_bottom = 0;			#The number of rows at the bottom of the frame to ignore (engine bars)
};

iNav: {
	enable = 0;						#Enable iPhone control
	send_ip = "192.168.2.102";		#client IP address
	send_port = "2081";
	listen_port = "2080";
};

path: {
	min_pixel_intensity = 100;
	min_total_intensity = 30000;
	
	follow_time = 10000;
	
};

hedge: {
	hit_time = 5000;
};
	
